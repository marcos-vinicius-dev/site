{"remainingRequest":"C:\\Users\\marco\\Desktop\\marcosdev\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\marco\\Desktop\\marcosdev\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\marco\\Desktop\\marcosdev\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\marco\\Desktop\\marcosdev\\src\\views\\contact-us\\components\\message.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\marco\\Desktop\\marcosdev\\src\\views\\contact-us\\components\\message.vue","mtime":1545087896301},{"path":"C:\\Users\\marco\\Desktop\\marcosdev\\.babelrc","mtime":1544569494915},{"path":"C:\\Users\\marco\\Desktop\\marcosdev\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\marco\\Desktop\\marcosdev\\node_modules\\babel-loader\\lib\\index.js","mtime":1519636541000},{"path":"C:\\Users\\marco\\Desktop\\marcosdev\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\marco\\Desktop\\marcosdev\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.object.assign\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport VueRecaptcha from 'vue-recaptcha';\nimport axios from 'axios';\nvar CONTACT_URL = process.env.VUE_APP_CONTACT_URL;\nvar GOOGLE_RECAPTCHA_SCRIPT = 'https://www.google.com/recaptcha/api.js?onload=vueRecaptchaApiLoaded&render=explicit';\n\nfunction initialState() {\n  return {\n    formWasSubmitted: false,\n    submissionInProgress: false,\n    captchaVerified: false,\n    captchaResponse: '',\n    email: '',\n    subject: '',\n    message: '',\n    acceptedRecaptcha: false\n  };\n}\n\nexport default {\n  name: 'ob-message',\n  data: initialState,\n  components: {\n    VueRecaptcha: VueRecaptcha\n  },\n  computed: {\n    formIsValid: function formIsValid() {\n      return this.errors.items.length <= 0 && this.captchaVerified === true;\n    },\n    mailToLink: function mailToLink() {\n      return \"mailto:info@open-book.org\".concat(this.mailToQueryString);\n    },\n    mailToQueryString: function mailToQueryString() {\n      var encodedSubject = encodeURIComponent(this.subject);\n      var encodedMessage = encodeURIComponent(this.message);\n      return \"?subject=\".concat(encodedSubject, \"&body=\").concat(encodedMessage);\n    }\n  },\n  methods: {\n    enableGoogleRecaptcha: function enableGoogleRecaptcha() {\n      this.injectGoogleRecaptcha();\n    },\n    injectGoogleRecaptcha: function injectGoogleRecaptcha() {\n      var that = this;\n\n      (function (d, s, id) {\n        var js,\n            fjs = d.getElementsByTagName(s)[0];\n\n        if (d.getElementById(id)) {\n          return;\n        }\n\n        js = d.createElement(s);\n        js.id = id;\n\n        js.onload = function () {\n          that.acceptedRecaptcha = true; // remote script has loaded\n        };\n\n        js.src = GOOGLE_RECAPTCHA_SCRIPT;\n        fjs.parentNode.insertBefore(js, fjs);\n      })(document, 'script', 'google-recaptcha');\n    },\n    onSubmit: function onSubmit() {\n      var _this = this;\n\n      this.validateAll().then(function (result) {\n        _this.formWasSubmitted = true;\n\n        if (result) {\n          _this.onSubmitWithValidForm();\n        }\n      });\n    },\n    onSubmitWithValidForm: function onSubmitWithValidForm() {\n      this.submitForm();\n    },\n    onCaptchaVerified: function onCaptchaVerified(response) {\n      this.captchaVerified = true;\n      this.captchaResponse = response;\n      console.log('Captcha is valid!');\n    },\n    submitForm: function submitForm() {\n      var _this2 = this;\n\n      this.enableLoading();\n      var requestData = {\n        subject: this.subject,\n        email: this.email,\n        message: this.message,\n        captcha: this.captchaResponse\n      };\n      axios.post(CONTACT_URL, requestData).then(function () {\n        _this2.clearAll();\n\n        _this2.disableLoading();\n\n        _this2.$dialog.alert({\n          title: 'Hooray!',\n          message: 'Your message has been delivered. <br/> You\\'ll hear from us soon.'\n        });\n      }).catch(function (error) {\n        console.error(error);\n\n        _this2.disableLoading();\n\n        _this2.$dialog.alert({\n          title: 'Oh no...',\n          message: 'We could not deliver your message. Please try again later or contact us at info@open-book.org'\n        });\n      });\n    },\n    validateAll: function validateAll() {\n      var _this3 = this;\n\n      return this.$validator.validateAll().then(function (result) {\n        _this3.touchAll();\n\n        return result && _this3.captchaVerified;\n      });\n    },\n    touchAll: function touchAll() {\n      var _this4 = this;\n\n      return Object.keys(this.fields).every(function (field) {\n        return _this4.fields[field].touched = true;\n      });\n    },\n    clearAll: function clearAll() {\n      Object.assign(this.$data, initialState());\n      this.$validator.reset();\n      this.$refs.recaptcha.reset();\n    },\n    enableLoading: function enableLoading() {\n      this.submissionInProgress = true;\n      this.loadingComponent = this.$loading.open();\n    },\n    disableLoading: function disableLoading() {\n      this.submissionInProgress = false;\n      this.loadingComponent.close();\n    }\n  }\n};",{"version":3,"sources":["message.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmFA;AACA;AAEA;AACA;;AAEA,wBACA;;sBAEA;0BACA;qBACA;qBACA;WACA;aACA;aACA;uBACA,AACA;AATA;;;AAWA;QAEA;QACA;;AAEA,AACA;AAFA;;wCAIA;uEACA;AACA;sCACA;qDACA;AACA;oDACA;mDACA;mDACA;iEACA;AACA,AACA;AAZA;;4DAcA;WACA;AACA;4DACA;iBACA;;2BACA;;4CACA;;kCACA;AACA;AACA;;6BACA;gBACA;;gCACA;mCACA,MACA;AACA;;iBACA;wCACA;6BACA;AACA;;AACA;;gDACA;iCACA;;oBACA;gBACA;AACA;AACA;AACA;4DACA;WACA;AACA;4DACA;6BACA;6BACA;kBACA;AACA;;AACA;;WAEA;;sBAEA;oBACA;sBACA;sBACA,AAEA;AANA;8BAOA,8BACA;eACA;;eACA;;;iBAEA;mBACA,AACA;AAHA;AAIA,gCACA;sBACA;;eACA;;;iBAEA;mBACA,AACA;AAHA;AAIA;AACA;;AACA;;kEACA;eACA;;gCACA;AACA;AACA;;AACA;;6DACA;8CACA;AACA;AACA;kCACA;gCACA;sBACA;2BACA;AACA;4CACA;kCACA;4CACA;AACA;8CACA;kCACA;4BACA;AACA,AACA;AAzFA;AAnBA","file":"message.vue","sourceRoot":"src\\views\\contact-us\\components","sourcesContent":["<template>\r\n    <div class=\"columns is-multiline is-mobile\" id=\"message-form\">\r\n        <form class=\"column is-12\" @submit.prevent=\"onSubmit()\">\r\n            <div class=\"field padding-bottom-1x\">\r\n                <label class=\"label\" for=\"subject\">\r\n                    {{ $t('message.subject') }}\r\n                </label>\r\n                <div class=\"control\">\r\n                    <input\r\n                        class=\"input is-medium\"\r\n                        v-validate=\"'required|min:5|max:64'\"\r\n                        type=\"text\"\r\n                        :placeholder=\"$t('message.reason_placeholder')\"\r\n                        id=\"subject\"\r\n                        v-model=\"subject\"\r\n                        name=\"subject\">\r\n                </div>\r\n                <p class=\"help is-danger\">\r\n                    <span v-show=\"fields.subject && fields.subject.touched && errors.has('subject')\">\r\n                        {{ errors.first('subject') }}\r\n                    </span>\r\n                </p>\r\n            </div>\r\n            <div class=\"field padding-bottom-1x\">\r\n                <label class=\"label\" for=\"email\">\r\n                    {{ $t('message.email') }}\r\n                </label>\r\n                <div class=\"control\">\r\n                    <input class=\"input is-medium\"\r\n                           v-validate=\"'required|email'\"\r\n                           type=\"text\"\r\n                           id=\"email\"\r\n                           name=\"email\"\r\n                           :placeholder=\"$t('message.email_placeholder')\"\r\n                           v-model=\"email\">\r\n                </div>\r\n                <p class=\"help is-danger\">\r\n                    <span v-show=\"fields.email && fields.email.touched && errors.has('email')\">\r\n                        {{ errors.first('email') }}\r\n                    </span>\r\n                </p>\r\n            </div>\r\n            <div class=\"field padding-bottom-3x\">\r\n                <label class=\"label\" for=\"message\"> {{ $t('message.user_message') }}</label>\r\n                <div class=\"field-body\">\r\n                    <div class=\"field\">\r\n                        <div class=\"control\">\r\n                            <textarea\r\n                                v-validate=\"'required|min:10|max:1000'\"\r\n                                class=\"textarea is-medium\"\r\n                                :placeholder=\"$t('message.user_message_placeholder')\"\r\n                                style=\"resize: none;\"\r\n                                id=\"message\"\r\n                                name=\"message\"\r\n                                v-model=\"message\"\r\n                            ></textarea>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <p class=\"help is-danger\">\r\n                    <span v-show=\"fields.message && fields.message.touched && errors.has('message')\">\r\n                        {{ errors.first('message') }}\r\n                    </span>\r\n                </p>\r\n            </div>\r\n\r\n\r\n            <div class=\"field is-grouped is-grouped-right\">\r\n                <p class=\"control\">\r\n                    <button class=\"button is-rainbow\" type=\"submit\">\r\n                        {{ $t('message.submit') }}\r\n                    </button>\r\n                </p>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</template>\r\n\r\n<style lang=\"scss\">\r\n\r\n</style>\r\n\r\n<script>\r\n    import VueRecaptcha from 'vue-recaptcha';\r\n    import axios from 'axios';\r\n\r\n    const CONTACT_URL = process.env.VUE_APP_CONTACT_URL;\r\n    const GOOGLE_RECAPTCHA_SCRIPT = 'https://www.google.com/recaptcha/api.js?onload=vueRecaptchaApiLoaded&render=explicit';\r\n\r\n    function initialState() {\r\n        return {\r\n            formWasSubmitted: false,\r\n            submissionInProgress: false,\r\n            captchaVerified: false,\r\n            captchaResponse: '',\r\n            email: '',\r\n            subject: '',\r\n            message: '',\r\n            acceptedRecaptcha: false,\r\n        }\r\n    }\r\n\r\n    export default {\r\n        name: 'ob-message',\r\n        data: initialState,\r\n        components: {\r\n            VueRecaptcha\r\n        },\r\n        computed: {\r\n            formIsValid() {\r\n                return this.errors.items.length <= 0 && this.captchaVerified === true;\r\n            },\r\n            mailToLink() {\r\n                return `mailto:info@open-book.org${this.mailToQueryString}`;\r\n            },\r\n            mailToQueryString() {\r\n                const encodedSubject = encodeURIComponent(this.subject);\r\n                const encodedMessage = encodeURIComponent(this.message);\r\n                return `?subject=${encodedSubject}&body=${encodedMessage}`;\r\n            }\r\n        },\r\n        methods: {\r\n            enableGoogleRecaptcha() {\r\n                this.injectGoogleRecaptcha();\r\n            },\r\n            injectGoogleRecaptcha() {\r\n                const that = this;\r\n                (function (d, s, id) {\r\n                    var js, fjs = d.getElementsByTagName(s)[0];\r\n                    if (d.getElementById(id)) {\r\n                        return;\r\n                    }\r\n                    js = d.createElement(s);\r\n                    js.id = id;\r\n                    js.onload = function () {\r\n                        that.acceptedRecaptcha = true;\r\n                        // remote script has loaded\r\n                    };\r\n                    js.src = GOOGLE_RECAPTCHA_SCRIPT;\r\n                    fjs.parentNode.insertBefore(js, fjs);\r\n                }(document, 'script', 'google-recaptcha'));\r\n            },\r\n            onSubmit() {\r\n                this.validateAll().then((result) => {\r\n                    this.formWasSubmitted = true;\r\n                    if (result) {\r\n                        this.onSubmitWithValidForm();\r\n                    }\r\n                });\r\n            },\r\n            onSubmitWithValidForm() {\r\n                this.submitForm();\r\n            },\r\n            onCaptchaVerified(response) {\r\n                this.captchaVerified = true;\r\n                this.captchaResponse = response;\r\n                console.log('Captcha is valid!');\r\n            },\r\n            submitForm() {\r\n                this.enableLoading();\r\n\r\n                const requestData = {\r\n                    subject: this.subject,\r\n                    email: this.email,\r\n                    message: this.message,\r\n                    captcha: this.captchaResponse\r\n                };\r\n\r\n                axios.post(CONTACT_URL, requestData)\r\n                    .then(() => {\r\n                        this.clearAll();\r\n                        this.disableLoading();\r\n                        this.$dialog.alert({\r\n                            title: 'Hooray!',\r\n                            message: 'Your message has been delivered. <br/> You\\'ll hear from us soon.'\r\n                        });\r\n                    })\r\n                    .catch((error) => {\r\n                        console.error(error);\r\n                        this.disableLoading();\r\n                        this.$dialog.alert({\r\n                            title: 'Oh no...',\r\n                            message: 'We could not deliver your message. Please try again later or contact us at info@open-book.org'\r\n                        });\r\n                    });\r\n            },\r\n            validateAll() {\r\n                return this.$validator.validateAll().then((result) => {\r\n                    this.touchAll();\r\n                    return result && this.captchaVerified;\r\n                });\r\n            },\r\n            touchAll() {\r\n                return Object.keys(this.fields).every(field => {\r\n                    return this.fields[field].touched = true;\r\n                });\r\n            },\r\n            clearAll() {\r\n                Object.assign(this.$data, initialState());\r\n                this.$validator.reset();\r\n                this.$refs.recaptcha.reset()\r\n            },\r\n            enableLoading() {\r\n                this.submissionInProgress = true;\r\n                this.loadingComponent = this.$loading.open();\r\n            },\r\n            disableLoading() {\r\n                this.submissionInProgress = false;\r\n                this.loadingComponent.close();\r\n            }\r\n        }\r\n    }\r\n</script>\r\n"]}]}