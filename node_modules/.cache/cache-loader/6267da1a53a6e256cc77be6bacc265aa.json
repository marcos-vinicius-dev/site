{"remainingRequest":"C:\\Users\\marco\\Desktop\\marcosdev\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\marco\\Desktop\\marcosdev\\src\\i18n-setup.js","dependencies":[{"path":"C:\\Users\\marco\\Desktop\\marcosdev\\src\\i18n-setup.js","mtime":1545264291145},{"path":"C:\\Users\\marco\\Desktop\\marcosdev\\.babelrc","mtime":1544569494915},{"path":"C:\\Users\\marco\\Desktop\\marcosdev\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\marco\\Desktop\\marcosdev\\node_modules\\babel-loader\\lib\\index.js","mtime":1519636541000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.array.includes\";\nimport Vue from 'vue';\nimport VueI18n from 'vue-i18n';\nimport * as translations from './locale/pt_BR';\nimport axios from 'axios';\nVue.use(VueI18n);\nvar messages = translations.messages;\nexport var i18n = new VueI18n({\n  locale: 'pt_BR',\n  // set locale\n  fallbackLocale: 'pt_BR',\n  messages: messages // set locale messages\n\n});\nvar loadedLanguages = ['pt_BR']; // our default language that is preloaded\n\nfunction setI18nLanguage(lang) {\n  i18n.locale = lang;\n  axios.defaults.headers.common['Accept-Language'] = lang;\n  document.querySelector('html').setAttribute('lang', lang);\n  return lang;\n}\n\nexport function loadLanguageAsync(locale) {\n  if (i18n.locale !== locale) {\n    if (!loadedLanguages.includes(locale)) {\n      return import(\n      /* webpackChunkName: \"locale-[request]\" */\n      \"@/locale/\".concat(locale)).then(function (data) {\n        i18n.setLocaleMessage(locale, data.messages[locale]);\n        loadedLanguages.push(locale);\n        return setI18nLanguage(locale);\n      });\n    }\n\n    return Promise.resolve(setI18nLanguage(locale));\n  }\n\n  return Promise.resolve(locale);\n}",{"version":3,"sources":["src\\i18n-setup.js"],"names":["Vue","VueI18n","translations","axios","use","messages","i18n","locale","fallbackLocale","loadedLanguages","setI18nLanguage","lang","defaults","headers","common","document","querySelector","setAttribute","loadLanguageAsync","includes","then","setLocaleMessage","data","push","Promise","resolve"],"mappings":";AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,OAAP,MAAoB,UAApB;AACA,OAAO,KAAKC,YAAZ,MAA8B,gBAA9B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEAH,IAAII,GAAJ,CAAQH,OAAR;AAEA,IAAMI,WAAWH,aAAaG,QAA9B;AACA,OAAO,IAAMC,OAAO,IAAIL,OAAJ,CAAY;AAC5BM,UAAQ,OADoB;AACV;AAClBC,kBAAgB,OAFY;AAG5BH,oBAH4B,CAGnB;;AAHmB,CAAZ,CAAb;AAKP,IAAMI,kBAAkB,CAAC,OAAD,CAAxB,C,CAAmC;;AAEnC,SAASC,eAAT,CAA0BC,IAA1B,EAAgC;AAC5BL,OAAKC,MAAL,GAAcI,IAAd;AACAR,QAAMS,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,iBAA9B,IAAmDH,IAAnD;AACAI,WAASC,aAAT,CAAuB,MAAvB,EAA+BC,YAA/B,CAA4C,MAA5C,EAAoDN,IAApD;AACA,SAAOA,IAAP;AACH;;AAED,OAAO,SAASO,iBAAT,CAA4BX,MAA5B,EAAoC;AACvC,MAAID,KAAKC,MAAL,KAAgBA,MAApB,EAA4B;AACxB,QAAI,CAACE,gBAAgBU,QAAhB,CAAyBZ,MAAzB,CAAL,EAAuC;AACnC,aAAO;AAAO;AAAP,yBAA8DA,MAA9D,GAAwEa,IAAxE,CAA6E,gBAAQ;AACxFd,aAAKe,gBAAL,CAAsBd,MAAtB,EAA8Be,KAAKjB,QAAL,CAAcE,MAAd,CAA9B;AACAE,wBAAgBc,IAAhB,CAAqBhB,MAArB;AACA,eAAOG,gBAAgBH,MAAhB,CAAP;AACH,OAJM,CAAP;AAKH;;AACD,WAAOiB,QAAQC,OAAR,CAAgBf,gBAAgBH,MAAhB,CAAhB,CAAP;AACH;;AACD,SAAOiB,QAAQC,OAAR,CAAgBlB,MAAhB,CAAP;AACH","sourceRoot":"C:\\Users\\marco\\Desktop\\marcosdev","sourcesContent":["import Vue from 'vue';\r\nimport VueI18n from 'vue-i18n';\r\nimport * as translations from './locale/pt_BR';\r\nimport axios from 'axios';\r\n\r\nVue.use(VueI18n);\r\n\r\nconst messages = translations.messages;\r\nexport const i18n = new VueI18n({\r\n    locale: 'pt_BR',  // set locale\r\n    fallbackLocale: 'pt_BR',\r\n    messages // set locale messages\r\n});\r\nconst loadedLanguages = ['pt_BR']; // our default language that is preloaded\r\n\r\nfunction setI18nLanguage (lang) {\r\n    i18n.locale = lang;\r\n    axios.defaults.headers.common['Accept-Language'] = lang;\r\n    document.querySelector('html').setAttribute('lang', lang);\r\n    return lang;\r\n}\r\n\r\nexport function loadLanguageAsync (locale) {\r\n    if (i18n.locale !== locale) {\r\n        if (!loadedLanguages.includes(locale)) {\r\n            return import(/* webpackChunkName: \"locale-[request]\" */ `@/locale/${locale}`).then(data => {\r\n                i18n.setLocaleMessage(locale, data.messages[locale]);\r\n                loadedLanguages.push(locale);\r\n                return setI18nLanguage(locale);\r\n            });\r\n        }\r\n        return Promise.resolve(setI18nLanguage(locale));\r\n    }\r\n    return Promise.resolve(locale);\r\n}"]}]}